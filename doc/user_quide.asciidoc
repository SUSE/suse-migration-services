# SUSE Distribution Migration System
===========
:Authors: Marcus Schäfer and Jesús Bermúdez Velázquez
:Publication_Date: TBD
:Latest_Version: 0.5.15
:Contributors: 
:Repo: https://github.com/SUSE/suse-migration-services[suse-migration-services]

[%hardbreaks]
Authors: {Authors}
Contributors: {Contributors}
Publication Date: {Publication_Date}
Latest Version: {Latest_Version}
Code available: {Repo}

=== Concept
Upgrading from one release to a newer one having to skip a range of multiple
releases introduces an upgrade problem.

The Distribution Migration System provides an upgrade path from A to B,
where A and B are to major distributions versions (for example, from SLES 12 SP4 to SLES 15 GA).

=== Requirements
The system to be migrated must be registered.

[listing]
$ SUSEConnect --regcod [SLES_REGCODE]

=== How does distribution migration system do it ?
To achieve the migration between this two releases, the entire migration process
is called from within a Live Migration Image.

Once the Distribution Migration system package has been installed in
the system to be migrated and it starts running, a pipeline of systemd
controlled services start to run. The following chain of services will be executed:

- detect the system to migrate
- mount it
- setup the network as clone from the system to migrate
- prepare the package manager for the migration task
- migrate the system
- update the grub
- unmount what it mounted
- reboot

=== Installation

Inside the system to be migrated the following tasks have to be performed:

. fetch the Distribution Migration System package which contains a
KIWI built image based on the target distribution of the migration:
+
[listing]
$ zypper ar official_repo_url live_migration

. fetch the suse-migration-activation package which contains an
activation package:
+
[listing]
$ zypper ar official_repo_url suse_migration_activation

. install it:
+
[listing]
$ zypper in SLE15-Migration suse_migration_activation

=== Run migration

When the package has been installed, run:

[listing]
$ reboot

When the migration has started, the only way to access the system during the
migration process is through ssh with a user called *migration*, for example:

[listing]
$ ssh migration@IP_OF_INSTANCE

NOTE: There is no need to provide any other information or key.

=== Debugging the migration
Once the migration has finished and the system has rebooted, the file
'/etc/issue' points to the log of migration, in case it has failed.

In order to debug a failed migration, a file '/system-root/etc/sle-migration-service'
must exists before the migration process starts. This file will prevent the
system to reboot in case of a failed migration, allowing to debug the system.
For example, as soon as the system started rebooting, user must create the file:

[source,bash]
----
$ ssh migration@IP_OF_INSTANCE

$ touch /etc/sle-migration-service
----

If the migration succeeded and that file is present,
it will be ignored and removed, the system will reboot normally
into the newer version.

=== After the migration
Whether the migration succeeded or not, a log file is available in
`/var/log/distro_migration.log` and it will contain information
about the migration process.
